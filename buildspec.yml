version: 0.2
env:
  variables:
    PGDATABASE: "geostore"
    PGUSER: "geostore"
    PGPASSWORD: "geostore"

phases:
  install:
    runtime-versions:
      java: openjdk8
    commands:
      - docker pull postgres:latest
      - echo Entered the install phase...
      - apt-get update -y
      - apt-get install -y postgresql-client
      - apt-get install -y postgresql postgresql-contrib
      - exit
      - apt-get install -y maven
      - cd src
      
    finally:
      - echo This always runs even if the update or install command fails 
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - docker run -e PGPASSWORD -e PGUSER -e PGDATABASE -d -p 5432:5432 postgres
      - psql \ --host=geostore-database-1.ck0fw0ou3xwc.us-east-2.rds.amazonaws.com \ --port=5432 \ --username=geostore \ --password=Christian97 \ --dbname=postgres
      - createdb geostore
      - psql -d geostore -f ./doc/sql/001_setup_db.sql
      - psql -U geostore -d geostore -f ./doc/sql/002_create_schema_postgres.sql
      - psql -U geostore_test -d geostore -f ./doc/sql/002_create_schema_postgres.sql
      - /q
      
    finally:
      - echo This always runs even if the login command fails 
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - mvn clean install -Dovrdir=postgres -Ppostgresgil
    finally:
      - echo This always runs even if the install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
  
artifacts:
  files:
    - appspec.yml
    - scripts/*
    - src/target/*
    - src/web/app/target/*
  name: geostore-artifact
  discard-paths: yes
cache:
  paths:
    - '/root/.m2/**/*'
